body { // TODO: reight place for this?
	position: relative;
}


// TODO: need to doc all of this
// TODO: maybe some of this belongs in chapstick

/*doc
---
title: Views
name: views
category: Core
---
*/

//
// HEADER IMAGE
//
.hero,
.stripe.hero {
	background-color: $C_accent;
}

.hero-photo {
  background-size: cover;
  background-position: center 20%;
  background-repeat: no-repeat;
  border-top: none;
  margin-bottom: 0;
  overflow: hidden;
  position: relative;
  @include textProtectionScrim;
}

.hero-content {
  @extend %valignChildren--bottom; // maybe try to align without this?
  min-height: $block-6;
  position: relative;

  @include atMediaDown(medium) {
	min-height: $block-5;
  }
}


@mixin modal-dialog{
	@include transform( translate3d(0, 0, 0) );
	@include transition(transform .2s ease);
	left: 50%;
	margin-left: -($modal-width/2);
	margin-top: 10vh; // Can we do this kind of thing on native?
	min-height: $modal-width;
	position: absolute;
	width: $modal-width;

	&.off{
	  @include transform( translateY(100vh) );
	}
  }

@mixin modal-full{
	@include transform( translate3d(0, 0, 0) );
	@include transition(transform .3s);
	left: 0;
	margin: 0;
	min-height: 100vh;
	position: absolute;
	top: 0;
	width: 100%;

	&.off{
		@include transform( translateY(100vh) );
	}
}


.view{
  background: white;
  width: 100%;
  min-height: 100vh;
  @include box-sizing(border-box);

	// adjust padding when view has transparent head
	&.has-hero{
		padding-top: 0;
	}

  // SPLIT VIEW
  // at narrow widths, show split view as separate screens based on js
  &.view--split, &.view--detail{
	  display: none;
	  &.focus{
		  display: block;
	  }
  }

  // SPLIT VIEW
  // at wide widths, show split view as split view
  @include atMediaUp(medium){
	$splitw: 320px;
	&.view--split, &.view--detail{
	  display: block;
	  &.off{
		  display: none;
	  }
	}

	&.view--split{
	  // NOTE: uses fixed position
	  // try not to put forms in the split part
	  // usually the split view will be a list
	  position: fixed;
	  top: 0;
	  left: 0;
	  height: 100vh;
	  width: $splitw;
	  border-right: 1px solid $C_border;
	  .viewHead{
		border-right: 1px solid $C_border;
		width: $splitw;
	  }
	  .viewBody{
		height: 100vh;
		overflow: auto;
	  }
	}
	&.view--detail{
	  padding-left: $splitw;
	  .viewHead{
		left: $splitw;
		right: 0;
		width: auto;
		.viewHead-back{
			display: none;
		}
	  }
	}
  }
}

// MODAL VIEW FULL
// full screen at all screen widths
.view--modal-full {
	@include modal-full;
	z-index: map-get($zindex-map, "modal");
}

// MODAL VIEW SNAP
// full at narrow widths, dialog at wide widths
.view--modal-snap {
	@include modal-dialog;
	@include atMediaDown(small){
		@include modal-full;
	}
	z-index: map-get($zindex-map, "modal");
}

.viewBody {
  .stripe:first-child {
	padding-top: $block;
  }
}




// HEAD
// the navigationbar/actionbar at the top of the view
// contains an escape action, a title, and screen actions

.viewHead{
	@include box-sizing(border-box);
	background: $C_accent;
	color: $C_textPrimaryInverted;
	height: $block;
	left: 0;
	position: fixed;
	top: 0;
	width: 100%;
	z-index: map-get($zindex-map, "main-header");

	// which search mode
	.bounds--standard{ display: block; }
	.bounds--search{ display: none; }
	&.viewHead--search{
		.bounds--standard{ display: none; }
		.bounds--search{ display: block; }
	}

	.bounds{
		padding: 0 $space;
	}

	.bounds, .ffbox{
		height: 100%; // for vertical-alignment
	}

	h1{
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
	}

	.viewHead-back {
	  width: 24px;
	}

	.viewHead-heading {
	  padding-left: $space-half;
	}

	.viewHead-actions {
	  // ------------------------
	  // Need to kill padding given
	  // by .ffbox children in .view-head
	  // because each icon has padding attached to it
	  padding: 0 !important;
	  white-space: nowrap;
	a {
	  box-sizing: border-box;
	  display: inline-block;
	  padding: 0 $space-half;

	  // Is this right?
	  &:last-child {
		padding-right: 0;
	  }
	  }
	}

	// TRANSPARENT HEAD WHEN SCREEN HAS A HERO STRIPE TO SHOW
	&.has-hero{
		background: transparent;
		border-bottom: none;
		color: $C_textPrimaryInverted;
		h1{
			opacity: 0;
		}
	}
	&.has-hero.has-hero-photo{
		@include background(linear-gradient(transparentize(#000000, .4), transparentize(#000000, 1) ));
	}
}


// VIEWHEAD SEARCH
// THIS IS KIND OF GROSS
.viewHead--search{
	display: none;
	position: absolute;
	left: 0;
	top: 0;
	width: 100%;
	height: 100%;
	background: $C_accent;
}
.view--searchMode{
	.viewHead--search{
		display: block;
	}
	.viewBody{
		display: none;
	}
}


// SHADE
// dims main (and split) views when modal appears
.shade{
	height: 100%;
	left: 0;
	position: absolute;
	top: 0;
	width: 100%;
	z-index: map-get($zindex-map, "shade");
	@include transition(all .15s);
	background: $C_modalShade;
	opacity: 1;
	.x{
		@include transition(all .15s .15s);
		display: block;
		height: 100vh;
		left: 0;
		line-height: 100vh;
		position: fixed;
		text-align: center;
		top: 0;
		vertical-align: middle;
		width: 100%;
	}
	&.off{
		opacity: 0;
		.x{
			opacity: 0;
		}
	}
}

